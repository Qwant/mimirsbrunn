name: Create and publish docker images

on:
  pull_request:
  push:
    branches:
      - master
      - release
    tags:
      - 'v*'

env:
  DOCKER_BUILDKIT: 1
  DOCKER_ORG: qwantresearch

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        image:
          - bragi
          - mimirsbrunn

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - id: rust_version
        run: |
          content=`cat ./rust-toolchain`
          # the following lines are only required for multi line json
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          # end of optional handling for multi line json
          echo "::set-output name=rustupToolchain::$content"
      - run: |
          echo "${{ steps.rust_version.outputs.rustupToolchain }}"

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get image name
        run: |
          VERSION=${GITHUB_REF#refs/*/}
          if [ "$GITHUB_EVENT_NAME" == "pull_request" ]; then
            IMAGE_TAG=$GITHUB_HEAD_REF
          elif [ "$VERSION" == "master" ]; then
            IMAGE_TAG=latest
          else
            IMAGE_TAG=$VERSION
          fi
          echo "DOCKER_IMAGE=$DOCKER_ORG/${{ matrix['image'] }}:$IMAGE_TAG" >> $GITHUB_ENV

      - name: Build docker image
        run: >-
          docker build
          --build-arg RUST_VERSION=${{ steps.rust_version.outputs.rustupToolchain }}
          --file docker/${{ matrix['image'] }}/Dockerfile
          --label "org.label-schema.vcs-ref=$GITHUB_SHA"
          --tag $DOCKER_IMAGE
          .

      - run: docker push $DOCKER_IMAGE
