[package]
name = "mimirsbrunn"
version = "2.10.1"
authors = ["Hove", "Qwant"]
build = "build.rs"
autotests = false
edition = "2021"
description = "Set of tools for geocoding with Elasticsearch"
license = "AGPLv3"
repository = "https://git.qwant.ninja/product/maps/mimirsbrunn"
keywords = ["mimirsbrunn", "elasticsearch", "geocoding"]
categories = ["application"]
readme = "README.md"

[workspace]
members = [
    "crates/libs/*",
    "crates/tests/*",
    "crates/bins/*",
]

[workspace.dependencies]
elasticsearch = "8.4.0-alpha.1"
lazy_static = "1.4"
regex = "1.5.5"
semver = "1.0.0"
serde = { version = "1.0", features = ["derive", "rc"] }
serde_json = "1.0"
serde_with = "3.0.0"
serde_qs = "0.12.0"
snafu = { version = "0.7", features = ["futures"] }
thiserror = "1.0.40"
anyhow = "1.0"
tokio = { version = "1.14.0", features = ["sync", "rt-multi-thread", "macros", "process"] }

tokio-stream = { version = "0.1.8", features = ["fs"] }
tracing = "0.1.37"
tracing-futures = { version = "0.2.5", features = ["futures-03"] }
tracing-appender = "0.2"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
async-compression = { version = "0.4.0", features = ["gzip", "tokio"] }
warp = "0.3.2"
axum = { version = "0.6.18", features = ["json"] }
axum-macros = "0.3.7"
axum-jsonschema = { version = "0.6.0", features = ["aide"] }
tower-http = { version = "0.4.1", features = ["trace"] }
aide = { version = "0.11.0", features = ["redoc", "axum", "axum-extra", "macros", ] }
schemars = { version = "0.8.12", features = ["uuid1"] }
uuid = { version = "1.3.4", features = ["serde", "v4"] }
reqwest = { version = "0.11", features = ["blocking", "json"] }
zip = "0.6.6"

url = { version = "2.2", features = ["serde"] }
http = "0.2"
address-formatter = "0.2"
clap = { version = "4.3.21", features = ["derive", "env"] }
config = { version = "0.11", default_features = false, features = ["json", "toml"] }
cosmogony = "0.14.2"
csv-async = { version = "1.2", features = ["tokio", "with_serde"] }
futures = "0.3"
geo = "0.26.0"
geo-types = { version = "0.7.9", features = ["rstar"] }
geojson = { version = "0.24.1", features = ["geo-types"] }
itertools = "0.11.0"
navitia-poi-model = "2.0.0"
num_cpus = "1.13"
osm_boundaries_utils = "0.11"
osmpbfreader = "0.16"
rstar = "0.11.0"
transit_model = "0.56.1"
async-trait = "0.1.68"
toml = "0.7.4"
convert_case = "0.6.0"
chrono = "0.4"
chrono-tz = "0.8.2"
human-sort = "0.2"
typed_index_collection = "2.0"
serial_test = "2.0.0"
postal = "0.2.5"
exporter-config = { path = "crates/libs/exporter-config" }
elastic-client = { path = "crates/libs/elastic-client" }
elastic-query-builder = { path = "crates/libs/elastic-query-builder" }
lib-geo = { path = "crates/libs/lib-geo" }
serde-helpers = { path = "crates/libs/serde-helpers" }
runtime = { path = "crates/libs/runtime" }
places = { path = "crates/libs/places" }
tagger = { path = "crates/libs/tagger" }
test-harness = { path = "crates/tests/test-harness" }
test-containers = { path = "crates/tests/test-containers" }
autometrics = { version = "0.5.0", features = ["prometheus-exporter"] }

approx = "0.5"
bk-tree = "0.5.0"
once_cell = "1.18.0"
diacritics = "0.2.0"

[dev-dependencies]
elastic-client.workspace = true
elastic-query-builder.workspace = true
serde-helpers.workspace = true
exporter-config.workspace = true
runtime.workspace = true
places.workspace = true
geo.workspace = true
geo-types.workspace = true
async-trait.workspace = true
rstar.workspace = true
address-formatter.workspace = true
cosmogony.workspace = true
clap.workspace = true
futures.workspace = true
tokio.workspace = true
tokio-stream.workspace = true
async-compression.workspace = true
tracing.workspace = true
tracing-futures.workspace = true
csv-async.workspace = true
num_cpus.workspace = true
navitia-poi-model.workspace = true
itertools.workspace = true
config.workspace = true
serde_json.workspace = true
transit_model.workspace = true
serde.workspace = true
snafu.workspace = true
osmpbfreader.workspace = true
osm_boundaries_utils.workspace = true
anyhow.workspace = true
lazy_static.workspace = true
test-harness.workspace = true
test-containers.workspace = true
url = { version = "2.2.2", features = ["serde"] }
criterion = "0.5.1"
cucumber = "0.10"
reqwest = { version = "0.11", features = ["blocking", "json"] }
serial_test = "2.0.0"
zip = { version = "0.6.6", default_features = false }

[build-dependencies]
json = "0.12"

[profile.production]
inherits = "release"
lto = "fat"
codegen-units = 1
strip = "debuginfo"

[[test]]
name = "end_to_end"
harness = false # Allows Cucumber to print output instead of libtest

[[test]]
name = "idf"
harness = false # Allows Cucumber to print output instead of libtest
test = false

[profile.bench]
lto = true

[[bench]]
name = "listing"
harness = false

[[bench]]
name = "indexing"
harness = false

[[bench]]
name = "searching"
harness = false
